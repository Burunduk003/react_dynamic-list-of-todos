{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","completed","filterTodosByTitle","target","filtered","props","todos","filter","todo","title","includes","value","setState","filterTodosByСompleteness","String","Randomize","rendom","sort","Math","random","this","onUserSelected","todoID","className","type","onChange","name","onClick","map","classNames","key","id","checked","readOnly","userId","Component","defaultProps","getAll","url","fetch","then","response","ok","Error","status","statusText","json","CurrentUser","user","loadData","a","prepearedUser","data","prevProps","clearUserSelection","email","phone","App","selectedUserId","prepearedTodos","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1409b2ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends Component {\n  state = {\n    completed: 'all',\n  }\n\n  filterTodosByTitle = ({ target }) => {\n    const { todos } = this.props;\n    const filtered = todos\n      .filter(todo => todo.title && todo.title.includes(target.value));\n\n    this.setState({\n      todos: filtered,\n    });\n  }\n\n  filterTodosByСompleteness = ({ target }) => {\n    const { todos } = this.props;\n\n    if (target.value === 'all') {\n      this.setState({\n        completed: target.value,\n        todos,\n      });\n    } else {\n      const filtered = todos\n        .filter(todo => String(todo.completed) === target.value);\n\n      this.setState({\n        completed: target.value,\n        todos: filtered,\n      });\n    }\n  }\n\n  Randomize = () => {\n    const { todos } = this.props;\n    const rendom = [...todos].sort(() => 0.5 - Math.random());\n\n    this.setState({\n      todos: rendom,\n    });\n  }\n\n  render() {\n    const { onUserSelected, todoID } = this.props;\n    const { completed } = this.state;\n    const todos = this.state.todos || this.props.todos;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <div className=\"TodoList__form\">\n            <input\n              className=\"TodoList__search\"\n              type=\"text\"\n              onChange={this.filterTodosByTitle}\n            />\n            <select\n              className=\"TodoList__search\"\n              name=\"completed\"\n              value={completed}\n              onChange={this.filterTodosByСompleteness}\n            >\n              <option value=\"all\">all</option>\n              <option value=\"false\">active</option>\n              <option value=\"true\">completed</option>\n            </select>\n            <button\n              type=\"button\"\n              onClick={this.Randomize}\n            >\n              Randomize\n            </button>\n          </div>\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                className={\n                  classNames('TodoList__item TodoList__item--checked', {\n                    'TodoList__item--unchecked': !todo.completed,\n                  })\n                }\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    checked={todo.completed}\n                    type=\"checkbox\"\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames('TodoList__user-button button', {\n                    'TodoList__user-button--selected': todo.id === todoID,\n                  })}\n                  type=\"button\"\n                  onClick={() => onUserSelected(todo.userId, todo.id)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })),\n  onUserSelected: PropTypes.func.isRequired,\n  todoID: PropTypes.number.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-api.herokuapp.com/`;\n\nexport function getAll(url) {\n  return fetch(`${API_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport '../../styles/general.scss';\nimport { getAll } from '../../api';\n\nexport class CurrentUser extends Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.loadData();\n    }\n  }\n\n  loadData = async() => {\n    const { userId } = this.props;\n    const prepearedUser = await getAll(`users/${userId}`);\n\n    this.setState({\n      user: prepearedUser.data,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUserSelection } = this.props;\n\n    return (\n      <>\n        {!user ? (<div>Loading...</div>) : (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {' '}\n                {user.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n            <button\n              className=\"CurrentUser__clear button\"\n              type=\"button\"\n              onClick={clearUserSelection}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  clearUserSelection: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAll } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    todoID: 0,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const prepearedTodos = await getAll('todos');\n\n    this.setState({\n      todos: prepearedTodos.data,\n    });\n  }\n\n  onUserSelected = (userId, todoID) => {\n    this.setState({\n      selectedUserId: userId,\n      todoID,\n    });\n  }\n\n  clearUserSelection = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  // filterTodosByTitle = ({ target }) => {\n  //   const { todos } = this.state;\n  //   const filtered = todos\n  //     .filter(todo => todo.title && todo.title.includes(target.value));\n\n  //   this.setState({\n  //     todos: filtered,\n  //   });\n  // }\n\n  render() {\n    const { todos, selectedUserId, todoID } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            todoID={todoID}\n            onUserSelected={this.onUserSelected}\n            filterTodosByTitle={this.filterTodosByTitle}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUserSelection={this.clearUserSelection}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}